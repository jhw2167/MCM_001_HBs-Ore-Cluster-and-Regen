Biome Support Implementation Plan

UUID Structure (3 digits):
- First digit (0-9): Level/Depth category
- Second digit (0-9): Biome category 
- Third digit (0-9): Combined shape and ore type identifier

Implementation Steps:

1. Config Changes Needed:
- Add biome identifier field to OreClusterConfigModel
- Add biome validation in OreClusterConfig
- Update JSON config format to include biome specifications

2. Core Logic Updates:
- Modify OreClusterCalculator to factor in biome during cluster generation
- Update OreClusterManager to track clusters by biome
- Add biome checks to OreClusterBlockStateTracker

3. UUID Generation:
Level categories (first digit):
0: Surface (y > 60)
1: Shallow (y 40-60)
2: Medium (y 20-40)
3: Deep (y 0-20)
4: Below zero (y < 0)

Biome categories (second digit):
0: Default/Any
1: Plains/Forest
2: Mountain
3: Desert
4: Ocean
5: Nether
6: End
7: Custom biome group 1
8: Custom biome group 2
9: Special/Reserved

Shape+Ore combined (third digit):
0-4: Standard shapes (vein, cluster, scattered, etc)
5-9: Special ore types or combinations

Migration Strategy:
1. Implement backward compatibility layer
2. Add conversion utility for existing configurations
3. Update existing cluster tracking to new UUID format
4. Add migration documentation for server admins

Technical Considerations:
- Maintain backwards compatibility with existing worlds
- Add biome caching to improve performance
- Consider config versioning system
